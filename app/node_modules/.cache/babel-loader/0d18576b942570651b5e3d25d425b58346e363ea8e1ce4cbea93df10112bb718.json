{"ast":null,"code":"export class TreeDeleteInstruction {\n  constructor(index, nodes) {\n    this.nodes = void 0;\n    this.index = void 0;\n    this.nodes = nodes;\n    this.index = index;\n  }\n  async process(svg) {\n    const node = this.nodes[this.index];\n\n    // Animate the nodes and labels removing themselves\n    const removeNodeTransition = node.element.transition().duration(500).style(\"opacity\", 0).end();\n    const removeLabelTransition = node.label.transition().duration(500).style(\"opacity\", 0).end();\n    let edgeTransitionPromise = null;\n\n    // Animates the edges removing themselves\n    if (node.edge) {\n      edgeTransitionPromise = node.edge.transition().duration(500).style(\"opacity\", 0).end();\n    }\n\n    // Wait for all transitions to finish\n    await Promise.all([removeNodeTransition, removeLabelTransition, edgeTransitionPromise]);\n\n    // Now safely remove the elements\n    node.element.remove();\n    node.label.remove();\n    if (node.edge) {\n      node.edge.remove();\n    }\n\n    // Remove node from array\n    this.nodes.splice(this.index, 1);\n  }\n}","map":{"version":3,"names":["TreeDeleteInstruction","constructor","index","nodes","process","svg","node","removeNodeTransition","element","transition","duration","style","end","removeLabelTransition","label","edgeTransitionPromise","edge","Promise","all","remove","splice"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/tree_delete_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\nimport {Node} from \"../pictures/node\";\r\n\r\nexport class TreeDeleteInstruction implements Instruction {\r\n\r\n    nodes : Node[];\r\n    index : number;\r\n\r\n    constructor(index: number, nodes : Node[]) {\r\n        this.nodes = nodes;\r\n        this.index = index;\r\n    }\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        const node = this.nodes[this.index];\r\n\r\n        // Animate the nodes and labels removing themselves\r\n        const removeNodeTransition = node.element.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0)\r\n            .end();\r\n\r\n        const removeLabelTransition = node.label.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0)\r\n            .end();\r\n\r\n        let edgeTransitionPromise: Promise<void> | null = null;\r\n\r\n        // Animates the edges removing themselves\r\n        if (node.edge) {\r\n            edgeTransitionPromise = node.edge.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0)\r\n                .end();\r\n        }\r\n\r\n        // Wait for all transitions to finish\r\n        await Promise.all([removeNodeTransition, removeLabelTransition, edgeTransitionPromise]);\r\n\r\n        // Now safely remove the elements\r\n        node.element.remove();\r\n        node.label.remove();\r\n        if (node.edge) {\r\n            node.edge.remove();\r\n        }\r\n\r\n        // Remove node from array\r\n        this.nodes.splice(this.index, 1);\r\n    }\r\n\r\n\r\n}"],"mappings":"AAIA,OAAO,MAAMA,qBAAqB,CAAwB;EAKtDC,WAAWA,CAACC,KAAa,EAAEC,KAAc,EAAE;IAAA,KAH3CA,KAAK;IAAA,KACLD,KAAK;IAGD,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,KAAK,GAAGA,KAAK;EACtB;EAEA,MAAME,OAAOA,CAACC,GAAmD,EAAiB;IAC9E,MAAMC,IAAI,GAAG,IAAI,CAACH,KAAK,CAAC,IAAI,CAACD,KAAK,CAAC;;IAEnC;IACA,MAAMK,oBAAoB,GAAGD,IAAI,CAACE,OAAO,CAACC,UAAU,CAAC,CAAC,CACjDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBC,GAAG,CAAC,CAAC;IAEV,MAAMC,qBAAqB,GAAGP,IAAI,CAACQ,KAAK,CAACL,UAAU,CAAC,CAAC,CAChDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBC,GAAG,CAAC,CAAC;IAEV,IAAIG,qBAA2C,GAAG,IAAI;;IAEtD;IACA,IAAIT,IAAI,CAACU,IAAI,EAAE;MACXD,qBAAqB,GAAGT,IAAI,CAACU,IAAI,CAACP,UAAU,CAAC,CAAC,CACzCC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBC,GAAG,CAAC,CAAC;IACd;;IAEA;IACA,MAAMK,OAAO,CAACC,GAAG,CAAC,CAACX,oBAAoB,EAAEM,qBAAqB,EAAEE,qBAAqB,CAAC,CAAC;;IAEvF;IACAT,IAAI,CAACE,OAAO,CAACW,MAAM,CAAC,CAAC;IACrBb,IAAI,CAACQ,KAAK,CAACK,MAAM,CAAC,CAAC;IACnB,IAAIb,IAAI,CAACU,IAAI,EAAE;MACXV,IAAI,CAACU,IAAI,CAACG,MAAM,CAAC,CAAC;IACtB;;IAEA;IACA,IAAI,CAAChB,KAAK,CAACiB,MAAM,CAAC,IAAI,CAAClB,KAAK,EAAE,CAAC,CAAC;EACpC;AAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}