{"ast":null,"code":"import * as d3 from \"d3\";\nexport class FAShowStateInstruction {\n  constructor(accept) {\n    this.accept = accept;\n  }\n  async process(svg) {\n    // Create the label text based on the condition\n    const labelText = this.accept ? \"Accept\" : \"Reject\";\n\n    // Add the label to the SVG if it doesn't already exist\n    const label = svg.select(`#${labelText}`);\n    if (label.empty()) {\n      svg.append(\"text\").attr(\"id\", labelText).attr(\"x\", 100) // Adjust the x position\n      .attr(\"y\", 100) // Adjust the y position\n      .attr(\"font-size\", 24).attr(\"fill\", \"black\").attr(\"font-weight\", \"normal\").style(\"opacity\", 0) // Initially invisible\n      .text(labelText);\n    }\n\n    // Fade in the label\n    d3.select(`#${labelText}`).transition().duration(500).style(\"opacity\", 1);\n    return Promise.resolve(undefined);\n  }\n}","map":{"version":3,"names":["d3","FAShowStateInstruction","constructor","accept","process","svg","labelText","label","select","empty","append","attr","style","text","transition","duration","Promise","resolve","undefined"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/fa_show_state_instruction.ts"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport class FAShowStateInstruction implements Instruction {\r\n\r\n    constructor(public accept: boolean) {\r\n    }\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n\r\n        // Create the label text based on the condition\r\n        const labelText = this.accept ? \"Accept\" : \"Reject\";\r\n\r\n        // Add the label to the SVG if it doesn't already exist\r\n        const label = svg.select(`#${labelText}`);\r\n        if (label.empty()) {\r\n            svg.append(\"text\")\r\n                .attr(\"id\", labelText)\r\n                .attr(\"x\", 100)  // Adjust the x position\r\n                .attr(\"y\", 100)  // Adjust the y position\r\n                .attr(\"font-size\", 24)\r\n                .attr(\"fill\", \"black\")\r\n                .attr(\"font-weight\", \"normal\")\r\n                .style(\"opacity\", 0)  // Initially invisible\r\n                .text(labelText);\r\n        }\r\n\r\n        // Fade in the label\r\n        d3.select(`#${labelText}`)\r\n            .transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 1);\r\n\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n\r\n}"],"mappings":"AAEA,OAAO,KAAKA,EAAE,MAAM,IAAI;AAExB,OAAO,MAAMC,sBAAsB,CAAwB;EAEvDC,WAAWA,CAAQC,MAAe,EAAE;IAAA,KAAjBA,MAAe,GAAfA,MAAe;EAClC;EAEA,MAAMC,OAAOA,CAACC,GAAmD,EAAiB;IAE9E;IACA,MAAMC,SAAS,GAAG,IAAI,CAACH,MAAM,GAAG,QAAQ,GAAG,QAAQ;;IAEnD;IACA,MAAMI,KAAK,GAAGF,GAAG,CAACG,MAAM,CAAC,IAAIF,SAAS,EAAE,CAAC;IACzC,IAAIC,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE;MACfJ,GAAG,CAACK,MAAM,CAAC,MAAM,CAAC,CACbC,IAAI,CAAC,IAAI,EAAEL,SAAS,CAAC,CACrBK,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAE;MAAA,CAChBA,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAE;MAAA,CAChBA,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CACrBA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAE;MAAA,CACrBC,IAAI,CAACP,SAAS,CAAC;IACxB;;IAEA;IACAN,EAAE,CAACQ,MAAM,CAAC,IAAIF,SAAS,EAAE,CAAC,CACrBQ,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbH,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IAExB,OAAOI,OAAO,CAACC,OAAO,CAACC,SAAS,CAAC;EACrC;AAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}