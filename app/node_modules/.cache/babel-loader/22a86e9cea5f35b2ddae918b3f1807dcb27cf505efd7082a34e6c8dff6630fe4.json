{"ast":null,"code":"import { FA_Node } from \"./fa_node\";\nexport class FA_Graph {\n  constructor() {\n    this.starting_node = void 0;\n    this.final_nodes = void 0;\n    this.nodes = void 0;\n    this.starting_node = null;\n    this.final_nodes = [];\n    this.nodes = new Map();\n  }\n  get_nodes() {\n    return this.nodes;\n  }\n  get_node(node) {\n    return this.nodes.get(node);\n  }\n  get_pointers(node) {\n    var _this$nodes$get;\n    return (_this$nodes$get = this.nodes.get(node)) === null || _this$nodes$get === void 0 ? void 0 : _this$nodes$get.get_pointers();\n  }\n  create_node(node, is_starting_node = false, is_final_node = false) {\n    this.nodes.set(node, new FA_Node(node));\n    if (is_starting_node) {\n      var _this$nodes$get2;\n      this.starting_node = (_this$nodes$get2 = this.nodes.get(node)) !== null && _this$nodes$get2 !== void 0 ? _this$nodes$get2 : null;\n    }\n    if (is_final_node) {\n      this.final_nodes.push(this.nodes.get(node));\n    }\n  }\n  add_node_pointers(value, weight, pointsTo) {\n    const fromNode = this.nodes.get(value);\n    const toNode = this.nodes.get(pointsTo);\n    if (!fromNode || !toNode) {\n      console.warn(`Cannot add pointer: ${value} or ${pointsTo} not found`);\n      return;\n    }\n    fromNode.add_pointer(toNode, weight);\n  }\n  set_starting_node(value) {\n    var _this$nodes$get3;\n    this.starting_node = (_this$nodes$get3 = this.nodes.get(value)) !== null && _this$nodes$get3 !== void 0 ? _this$nodes$get3 : null;\n  }\n  add_final_node(value) {\n    this.final_nodes.push(this.nodes.get(value));\n  }\n  has_starting_node() {\n    return this.starting_node != null;\n  }\n  has_one_final_node() {\n    return this.final_nodes.length > 0;\n  }\n  is_final_node(value) {\n    const node = this.nodes.get(value);\n    if (!node) return false;\n    return this.final_nodes.includes(node);\n  }\n}","map":{"version":3,"names":["FA_Node","FA_Graph","constructor","starting_node","final_nodes","nodes","Map","get_nodes","get_node","node","get","get_pointers","_this$nodes$get","create_node","is_starting_node","is_final_node","set","_this$nodes$get2","push","add_node_pointers","value","weight","pointsTo","fromNode","toNode","console","warn","add_pointer","set_starting_node","_this$nodes$get3","add_final_node","has_starting_node","has_one_final_node","length","includes"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/structures/fa_graph.tsx"],"sourcesContent":["import {FA_Node} from \"./fa_node\";\r\n\r\nexport class FA_Graph {\r\n\r\n    private starting_node: FA_Node | null;\r\n    private final_nodes: FA_Node[];\r\n\r\n    private nodes: Map<string | number, FA_Node>;\r\n\r\n    constructor() {\r\n        this.starting_node = null;\r\n        this.final_nodes = [];\r\n        this.nodes = new Map<string | number, FA_Node>();\r\n    }\r\n\r\n    get_nodes() {\r\n        return this.nodes;\r\n    }\r\n\r\n    get_node(node: string | number) {\r\n        return this.nodes.get(node);\r\n    }\r\n\r\n    get_pointers(node: string | number) {\r\n        return this.nodes.get(node)?.get_pointers();\r\n    }\r\n\r\n    create_node(node: (string | number), is_starting_node: boolean = false, is_final_node: boolean = false): void {\r\n        this.nodes.set(node, new FA_Node(node));\r\n\r\n        if (is_starting_node) {\r\n            this.starting_node = this.nodes.get(node) ?? null;\r\n        }\r\n\r\n        if (is_final_node) {\r\n            this.final_nodes.push(this.nodes.get(node) as FA_Node);\r\n        }\r\n    }\r\n\r\n    add_node_pointers(value: string | number, weight: (string | number)[], pointsTo: string | number): void {\r\n        const fromNode = this.nodes.get(value);\r\n        const toNode = this.nodes.get(pointsTo);\r\n\r\n        if (!fromNode || !toNode) {\r\n            console.warn(`Cannot add pointer: ${value} or ${pointsTo} not found`);\r\n            return;\r\n        }\r\n\r\n        fromNode.add_pointer(toNode, weight);\r\n    }\r\n\r\n    set_starting_node(value: string | number): void {\r\n        this.starting_node = this.nodes.get(value) ?? null;\r\n    }\r\n\r\n    add_final_node(value: string | number) {\r\n        this.final_nodes.push(this.nodes.get(value) as FA_Node);\r\n    }\r\n\r\n    has_starting_node(): boolean {\r\n        return this.starting_node != null;\r\n    }\r\n\r\n    has_one_final_node(): boolean {\r\n        return this.final_nodes.length > 0;\r\n    }\r\n\r\n    is_final_node(value: string | number): boolean {\r\n        const node = this.nodes.get(value);\r\n        if (!node) return false;\r\n        return this.final_nodes.includes(node);\r\n    }\r\n\r\n\r\n\r\n\r\n}"],"mappings":"AAAA,SAAQA,OAAO,QAAO,WAAW;AAEjC,OAAO,MAAMC,QAAQ,CAAC;EAOlBC,WAAWA,CAAA,EAAG;IAAA,KALNC,aAAa;IAAA,KACbC,WAAW;IAAA,KAEXC,KAAK;IAGT,IAAI,CAACF,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAA2B,CAAC;EACpD;EAEAC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACF,KAAK;EACrB;EAEAG,QAAQA,CAACC,IAAqB,EAAE;IAC5B,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACD,IAAI,CAAC;EAC/B;EAEAE,YAAYA,CAACF,IAAqB,EAAE;IAAA,IAAAG,eAAA;IAChC,QAAAA,eAAA,GAAO,IAAI,CAACP,KAAK,CAACK,GAAG,CAACD,IAAI,CAAC,cAAAG,eAAA,uBAApBA,eAAA,CAAsBD,YAAY,CAAC,CAAC;EAC/C;EAEAE,WAAWA,CAACJ,IAAuB,EAAEK,gBAAyB,GAAG,KAAK,EAAEC,aAAsB,GAAG,KAAK,EAAQ;IAC1G,IAAI,CAACV,KAAK,CAACW,GAAG,CAACP,IAAI,EAAE,IAAIT,OAAO,CAACS,IAAI,CAAC,CAAC;IAEvC,IAAIK,gBAAgB,EAAE;MAAA,IAAAG,gBAAA;MAClB,IAAI,CAACd,aAAa,IAAAc,gBAAA,GAAG,IAAI,CAACZ,KAAK,CAACK,GAAG,CAACD,IAAI,CAAC,cAAAQ,gBAAA,cAAAA,gBAAA,GAAI,IAAI;IACrD;IAEA,IAAIF,aAAa,EAAE;MACf,IAAI,CAACX,WAAW,CAACc,IAAI,CAAC,IAAI,CAACb,KAAK,CAACK,GAAG,CAACD,IAAI,CAAY,CAAC;IAC1D;EACJ;EAEAU,iBAAiBA,CAACC,KAAsB,EAAEC,MAA2B,EAAEC,QAAyB,EAAQ;IACpG,MAAMC,QAAQ,GAAG,IAAI,CAAClB,KAAK,CAACK,GAAG,CAACU,KAAK,CAAC;IACtC,MAAMI,MAAM,GAAG,IAAI,CAACnB,KAAK,CAACK,GAAG,CAACY,QAAQ,CAAC;IAEvC,IAAI,CAACC,QAAQ,IAAI,CAACC,MAAM,EAAE;MACtBC,OAAO,CAACC,IAAI,CAAC,uBAAuBN,KAAK,OAAOE,QAAQ,YAAY,CAAC;MACrE;IACJ;IAEAC,QAAQ,CAACI,WAAW,CAACH,MAAM,EAAEH,MAAM,CAAC;EACxC;EAEAO,iBAAiBA,CAACR,KAAsB,EAAQ;IAAA,IAAAS,gBAAA;IAC5C,IAAI,CAAC1B,aAAa,IAAA0B,gBAAA,GAAG,IAAI,CAACxB,KAAK,CAACK,GAAG,CAACU,KAAK,CAAC,cAAAS,gBAAA,cAAAA,gBAAA,GAAI,IAAI;EACtD;EAEAC,cAAcA,CAACV,KAAsB,EAAE;IACnC,IAAI,CAAChB,WAAW,CAACc,IAAI,CAAC,IAAI,CAACb,KAAK,CAACK,GAAG,CAACU,KAAK,CAAY,CAAC;EAC3D;EAEAW,iBAAiBA,CAAA,EAAY;IACzB,OAAO,IAAI,CAAC5B,aAAa,IAAI,IAAI;EACrC;EAEA6B,kBAAkBA,CAAA,EAAY;IAC1B,OAAO,IAAI,CAAC5B,WAAW,CAAC6B,MAAM,GAAG,CAAC;EACtC;EAEAlB,aAAaA,CAACK,KAAsB,EAAW;IAC3C,MAAMX,IAAI,GAAG,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACU,KAAK,CAAC;IAClC,IAAI,CAACX,IAAI,EAAE,OAAO,KAAK;IACvB,OAAO,IAAI,CAACL,WAAW,CAAC8B,QAAQ,CAACzB,IAAI,CAAC;EAC1C;AAKJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}