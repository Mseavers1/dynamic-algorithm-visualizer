{"ast":null,"code":"export class TreeDeleteInstruction{constructor(index,nodes){this.nodes=void 0;this.index=void 0;this.nodes=nodes;this.index=index;}async process(svg){const node=this.nodes[this.index];// Animate the nodes and labels removing themselves\nconst removeNodeTransition=node.element.transition().duration(500).style(\"opacity\",0);const removeLabelTransition=node.label.transition().duration(500).style(\"opacity\",0);let edgeTransitionPromise=null;// Animates the edges removing themselves\nif(node.edge){const removeEdgeTransition=node.edge.transition().duration(500).style(\"opacity\",0);edgeTransitionPromise=removeEdgeTransition.end();}// Wait for all transitions to finish\nawait Promise.all([removeNodeTransition.end(),removeLabelTransition.end(),edgeTransitionPromise]);// Now safely remove the elements\nnode.element.remove();node.label.remove();if(node.edge){node.edge.remove();}// Remove node from array\nthis.nodes.splice(this.index,1);}}","map":{"version":3,"names":["TreeDeleteInstruction","constructor","index","nodes","process","svg","node","removeNodeTransition","element","transition","duration","style","removeLabelTransition","label","edgeTransitionPromise","edge","removeEdgeTransition","end","Promise","all","remove","splice"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/tree_delete_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\nimport {Node} from \"../pictures/node\";\r\n\r\nexport class TreeDeleteInstruction implements Instruction {\r\n\r\n    nodes : Node[];\r\n    index : number;\r\n\r\n    constructor(index: number, nodes : Node[]) {\r\n        this.nodes = nodes;\r\n        this.index = index;\r\n    }\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        const node = this.nodes[this.index];\r\n\r\n        // Animate the nodes and labels removing themselves\r\n        const removeNodeTransition = node.element.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0)\r\n\r\n        const removeLabelTransition = node.label.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0)\r\n\r\n        let edgeTransitionPromise: Promise<void> | null = null;\r\n\r\n        // Animates the edges removing themselves\r\n        if (node.edge) {\r\n            const removeEdgeTransition = node.edge.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0)\r\n\r\n            edgeTransitionPromise = removeEdgeTransition.end();\r\n        }\r\n\r\n        // Wait for all transitions to finish\r\n        await Promise.all([removeNodeTransition.end(), removeLabelTransition.end(), edgeTransitionPromise]);\r\n\r\n        // Now safely remove the elements\r\n        node.element.remove();\r\n        node.label.remove();\r\n        if (node.edge) {\r\n            node.edge.remove();\r\n        }\r\n\r\n        // Remove node from array\r\n        this.nodes.splice(this.index, 1);\r\n    }\r\n\r\n\r\n}"],"mappings":"AAIA,MAAO,MAAM,CAAAA,qBAA6C,CAKtDC,WAAWA,CAACC,KAAa,CAAEC,KAAc,CAAE,MAH3CA,KAAK,aACLD,KAAK,QAGD,IAAI,CAACC,KAAK,CAAGA,KAAK,CAClB,IAAI,CAACD,KAAK,CAAGA,KAAK,CACtB,CAEA,KAAM,CAAAE,OAAOA,CAACC,GAAmD,CAAiB,CAC9E,KAAM,CAAAC,IAAI,CAAG,IAAI,CAACH,KAAK,CAAC,IAAI,CAACD,KAAK,CAAC,CAEnC;AACA,KAAM,CAAAK,oBAAoB,CAAGD,IAAI,CAACE,OAAO,CAACC,UAAU,CAAC,CAAC,CACjDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB,KAAM,CAAAC,qBAAqB,CAAGN,IAAI,CAACO,KAAK,CAACJ,UAAU,CAAC,CAAC,CAChDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB,GAAI,CAAAG,qBAA2C,CAAG,IAAI,CAEtD;AACA,GAAIR,IAAI,CAACS,IAAI,CAAE,CACX,KAAM,CAAAC,oBAAoB,CAAGV,IAAI,CAACS,IAAI,CAACN,UAAU,CAAC,CAAC,CAC9CC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExBG,qBAAqB,CAAGE,oBAAoB,CAACC,GAAG,CAAC,CAAC,CACtD,CAEA;AACA,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CAACZ,oBAAoB,CAACU,GAAG,CAAC,CAAC,CAAEL,qBAAqB,CAACK,GAAG,CAAC,CAAC,CAAEH,qBAAqB,CAAC,CAAC,CAEnG;AACAR,IAAI,CAACE,OAAO,CAACY,MAAM,CAAC,CAAC,CACrBd,IAAI,CAACO,KAAK,CAACO,MAAM,CAAC,CAAC,CACnB,GAAId,IAAI,CAACS,IAAI,CAAE,CACXT,IAAI,CAACS,IAAI,CAACK,MAAM,CAAC,CAAC,CACtB,CAEA;AACA,IAAI,CAACjB,KAAK,CAACkB,MAAM,CAAC,IAAI,CAACnB,KAAK,CAAE,CAAC,CAAC,CACpC,CAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}