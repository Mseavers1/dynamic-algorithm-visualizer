{"ast":null,"code":"// Class setup to handle all animations by using instructions that are defined outside this class\nimport*as d3 from\"d3\";export class AnimationPlayer{constructor(setIsAnimating){this.setIsAnimating=setIsAnimating;// Queue of instructions\nthis.instructions=void 0;// Processes all the instructions in the queue\nthis.processInstructions=async()=>{// Base Case\nif(this.instructions.length===0){this.setIsAnimating(false);return;}this.setIsAnimating(true);// Gets and removes the first instruction\nconst instruction=this.instructions.shift();const svg=d3.select(\"#svg-container\").attr(\"width\",600).attr(\"height\",500);if(instruction){await instruction.process(svg);await this.processInstructions();}};this.instructions=[];}// Adds a new instruction into the queue\naddInstruction(instruction){this.instructions.push(instruction);}}","map":{"version":3,"names":["d3","AnimationPlayer","constructor","setIsAnimating","instructions","processInstructions","length","instruction","shift","svg","select","attr","process","addInstruction","push"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/animation_player.tsx"],"sourcesContent":["// Class setup to handle all animations by using instructions that are defined outside this class\r\nimport {Instruction} from \"./Instructions/i_instruction\";\r\nimport {Picture} from \"./pictures/i_picture\";\r\nimport * as d3 from \"d3\";\r\nimport {BaseType} from \"d3\";\r\n\r\nexport class AnimationPlayer {\r\n\r\n    // Queue of instructions\r\n    private instructions : Instruction[];\r\n\r\n    constructor(private setIsAnimating: (value: boolean) => void) {\r\n        this.instructions = [];\r\n    }\r\n\r\n    // Adds a new instruction into the queue\r\n    addInstruction(instruction : Instruction) {\r\n        this.instructions.push(instruction);\r\n    }\r\n\r\n    // Processes all the instructions in the queue\r\n    processInstructions = async()=> {\r\n\r\n        // Base Case\r\n        if (this.instructions.length === 0) {\r\n            this.setIsAnimating(false);\r\n            return;\r\n        }\r\n\r\n        this.setIsAnimating(true);\r\n\r\n        // Gets and removes the first instruction\r\n        const instruction = this.instructions.shift();\r\n\r\n        const svg = d3.select(\"#svg-container\").attr(\"width\", 600).attr(\"height\", 500);\r\n\r\n        if (instruction) {\r\n            await instruction.process(svg);\r\n            await this.processInstructions();\r\n        }\r\n    }\r\n\r\n}"],"mappings":"AAAA;AAGA,MAAO,GAAK,CAAAA,EAAE,KAAM,IAAI,CAGxB,MAAO,MAAM,CAAAC,eAAgB,CAKzBC,WAAWA,CAASC,cAAwC,CAAE,MAA1CA,cAAwC,CAAxCA,cAAwC,CAH5D;AAAA,KACQC,YAAY,QAWpB;AAAA,KACAC,mBAAmB,CAAG,SAAU,CAE5B;AACA,GAAI,IAAI,CAACD,YAAY,CAACE,MAAM,GAAK,CAAC,CAAE,CAChC,IAAI,CAACH,cAAc,CAAC,KAAK,CAAC,CAC1B,OACJ,CAEA,IAAI,CAACA,cAAc,CAAC,IAAI,CAAC,CAEzB;AACA,KAAM,CAAAI,WAAW,CAAG,IAAI,CAACH,YAAY,CAACI,KAAK,CAAC,CAAC,CAE7C,KAAM,CAAAC,GAAG,CAAGT,EAAE,CAACU,MAAM,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC,OAAO,CAAE,GAAG,CAAC,CAACA,IAAI,CAAC,QAAQ,CAAE,GAAG,CAAC,CAE9E,GAAIJ,WAAW,CAAE,CACb,KAAM,CAAAA,WAAW,CAACK,OAAO,CAACH,GAAG,CAAC,CAC9B,KAAM,KAAI,CAACJ,mBAAmB,CAAC,CAAC,CACpC,CACJ,CAAC,CA5BG,IAAI,CAACD,YAAY,CAAG,EAAE,CAC1B,CAEA;AACAS,cAAcA,CAACN,WAAyB,CAAE,CACtC,IAAI,CAACH,YAAY,CAACU,IAAI,CAACP,WAAW,CAAC,CACvC,CAwBJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}