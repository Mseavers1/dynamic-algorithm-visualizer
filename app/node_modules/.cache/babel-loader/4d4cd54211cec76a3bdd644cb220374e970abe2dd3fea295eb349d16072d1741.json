{"ast":null,"code":"export class FAHighlightInstruction {\n  constructor(value) {}\n  process(svg) {\n    const lineId = \"line-0\";\n    const markerId = `arrow-${lineId}`;\n\n    // Begin the transition for both the line and the marker path at the same time\n    const lineAndArrowTransition = svg.transition().duration(1000);\n    lineAndArrowTransition.select(`#${lineId}`).attr(\"stroke\", \"red\").attr(\"stroke-width\", 2).attr(\"marker-end\", `url(#${markerId})`); // Attach the marker with arrowhead\n\n    lineAndArrowTransition.select(`#${markerId} path`).attr(\"fill\", \"red\"); // Change the arrowhead color to red\n\n    const line = svg.select(\"#line-0\");\n    console.log(\"Line found:\", !line.empty());\n    return Promise.resolve();\n  }\n}","map":{"version":3,"names":["FAHighlightInstruction","constructor","value","process","svg","lineId","markerId","lineAndArrowTransition","transition","duration","select","attr","line","console","log","empty","Promise","resolve"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/highlight_fa_node_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport d3, {BaseType, Selection} from \"d3\";\r\n\r\nexport class FAHighlightInstruction implements Instruction {\r\n\r\n    constructor(value: string | number) {\r\n\r\n    }\r\n\r\n    process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n\r\n        const lineId = \"line-0\";\r\n        const markerId = `arrow-${lineId}`;\r\n\r\n        // Begin the transition for both the line and the marker path at the same time\r\n        const lineAndArrowTransition = svg.transition().duration(1000);\r\n\r\n        lineAndArrowTransition\r\n            .select(`#${lineId}`)\r\n            .attr(\"stroke\", \"red\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"marker-end\", `url(#${markerId})`);  // Attach the marker with arrowhead\r\n\r\n        lineAndArrowTransition\r\n            .select(`#${markerId} path`)\r\n            .attr(\"fill\", \"red\");  // Change the arrowhead color to red\r\n\r\n\r\n\r\n\r\n\r\n        const line = svg.select(\"#line-0\");\r\n        console.log(\"Line found:\", !line.empty());\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n}"],"mappings":"AAGA,OAAO,MAAMA,sBAAsB,CAAwB;EAEvDC,WAAWA,CAACC,KAAsB,EAAE,CAEpC;EAEAC,OAAOA,CAACC,GAAmD,EAAiB;IAExE,MAAMC,MAAM,GAAG,QAAQ;IACvB,MAAMC,QAAQ,GAAG,SAASD,MAAM,EAAE;;IAElC;IACA,MAAME,sBAAsB,GAAGH,GAAG,CAACI,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC;IAE9DF,sBAAsB,CACjBG,MAAM,CAAC,IAAIL,MAAM,EAAE,CAAC,CACpBM,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CACrBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,YAAY,EAAE,QAAQL,QAAQ,GAAG,CAAC,CAAC,CAAE;;IAE/CC,sBAAsB,CACjBG,MAAM,CAAC,IAAIJ,QAAQ,OAAO,CAAC,CAC3BK,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAE;;IAM3B,MAAMC,IAAI,GAAGR,GAAG,CAACM,MAAM,CAAC,SAAS,CAAC;IAClCG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;IAEzC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}