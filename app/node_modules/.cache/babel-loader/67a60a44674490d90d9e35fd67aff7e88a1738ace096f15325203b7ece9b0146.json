{"ast":null,"code":"export class TreeClearInstruction {\n  constructor(nodes) {\n    this.nodes = void 0;\n    this.nodes = nodes;\n  }\n  async process(svg) {\n    let transitions = [];\n\n    // Animates the nodes being removed\n    for (const node of this.nodes) {\n      const removeNodeTransition = node.element.transition().duration(500).style(\"opacity\", 0);\n      const removeLabelTransition = node.label.transition().duration(500).style(\"opacity\", 0);\n      let edgeTransitionPromise = null;\n\n      // Animates the edges removing themselves\n      if (node.edge) {\n        const removeEdgeTransition = node.edge.transition().duration(500).style(\"opacity\", 0);\n        edgeTransitionPromise = removeEdgeTransition.end();\n        transitions.push(edgeTransitionPromise);\n      }\n      transitions.push(removeNodeTransition.end());\n      transitions.push(removeLabelTransition.end());\n    }\n    await Promise.all(transitions);\n\n    // Removes the edges\n    for (const node of this.nodes) {\n      node.element.remove();\n      node.label.remove();\n      if (node.edge) {\n        node.edge.remove();\n      }\n    }\n  }\n}","map":{"version":3,"names":["TreeClearInstruction","constructor","nodes","process","svg","transitions","node","removeNodeTransition","element","transition","duration","style","removeLabelTransition","label","edgeTransitionPromise","edge","removeEdgeTransition","end","push","Promise","all","remove"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/tree_clear_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\nimport {Node} from \"../pictures/node\";\r\n\r\nexport class TreeClearInstruction implements Instruction {\r\n\r\n    nodes : Node[];\r\n\r\n    constructor(nodes : Node[]) {\r\n        this.nodes = nodes;\r\n    }\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n\r\n        let transitions = [];\r\n\r\n        // Animates the nodes being removed\r\n        for (const node of this.nodes) {\r\n\r\n            const removeNodeTransition = node.element.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0);\r\n\r\n            const removeLabelTransition = node.label.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0)\r\n\r\n            let edgeTransitionPromise: Promise<void> | null = null;\r\n\r\n            // Animates the edges removing themselves\r\n            if (node.edge) {\r\n                const removeEdgeTransition = node.edge.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0)\r\n\r\n                edgeTransitionPromise = removeEdgeTransition.end();\r\n                transitions.push(edgeTransitionPromise);\r\n            }\r\n\r\n            transitions.push(removeNodeTransition.end());\r\n            transitions.push(removeLabelTransition.end());\r\n        }\r\n\r\n        await Promise.all(transitions);\r\n\r\n        // Removes the edges\r\n        for (const node of this.nodes) {\r\n\r\n            node.element.remove();\r\n            node.label.remove();\r\n\r\n            if (node.edge) {\r\n                node.edge.remove();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}"],"mappings":"AAIA,OAAO,MAAMA,oBAAoB,CAAwB;EAIrDC,WAAWA,CAACC,KAAc,EAAE;IAAA,KAF5BA,KAAK;IAGD,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEA,MAAMC,OAAOA,CAACC,GAAmD,EAAiB;IAE9E,IAAIC,WAAW,GAAG,EAAE;;IAEpB;IACA,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACJ,KAAK,EAAE;MAE3B,MAAMK,oBAAoB,GAAGD,IAAI,CAACE,OAAO,CAACC,UAAU,CAAC,CAAC,CACjDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;MAExB,MAAMC,qBAAqB,GAAGN,IAAI,CAACO,KAAK,CAACJ,UAAU,CAAC,CAAC,CAChDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;MAExB,IAAIG,qBAA2C,GAAG,IAAI;;MAEtD;MACA,IAAIR,IAAI,CAACS,IAAI,EAAE;QACX,MAAMC,oBAAoB,GAAGV,IAAI,CAACS,IAAI,CAACN,UAAU,CAAC,CAAC,CAC9CC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;QAExBG,qBAAqB,GAAGE,oBAAoB,CAACC,GAAG,CAAC,CAAC;QAClDZ,WAAW,CAACa,IAAI,CAACJ,qBAAqB,CAAC;MAC3C;MAEAT,WAAW,CAACa,IAAI,CAACX,oBAAoB,CAACU,GAAG,CAAC,CAAC,CAAC;MAC5CZ,WAAW,CAACa,IAAI,CAACN,qBAAqB,CAACK,GAAG,CAAC,CAAC,CAAC;IACjD;IAEA,MAAME,OAAO,CAACC,GAAG,CAACf,WAAW,CAAC;;IAE9B;IACA,KAAK,MAAMC,IAAI,IAAI,IAAI,CAACJ,KAAK,EAAE;MAE3BI,IAAI,CAACE,OAAO,CAACa,MAAM,CAAC,CAAC;MACrBf,IAAI,CAACO,KAAK,CAACQ,MAAM,CAAC,CAAC;MAEnB,IAAIf,IAAI,CAACS,IAAI,EAAE;QACXT,IAAI,CAACS,IAAI,CAACM,MAAM,CAAC,CAAC;MACtB;IAEJ;EACJ;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}