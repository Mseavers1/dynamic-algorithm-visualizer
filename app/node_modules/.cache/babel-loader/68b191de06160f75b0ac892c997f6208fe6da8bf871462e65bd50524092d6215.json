{"ast":null,"code":"export class FAHighlightInstruction {\n  constructor(nodeFrom, nodeTo) {\n    this.nodeFrom = void 0;\n    this.nodeTo = void 0;\n    this.nodeFrom = nodeFrom;\n    this.nodeTo = nodeTo;\n  }\n  process(svg) {\n    // Reset color\n    svg.selectAll(\"line[id^='line-']\").attr(\"stroke\", \"black\").attr(\"stroke-width\", 1);\n    svg.selectAll(\"marker[id^='arrow-'] path\").attr(\"fill\", \"black\");\n\n    // Highlights the arrow\n    const lineId = `line-${this.nodeFrom}-${this.nodeTo}`;\n    const markerId = `arrow-${this.nodeFrom}-${this.nodeTo}`;\n    const lineAndArrowTransition = svg.transition().duration(1000);\n    lineAndArrowTransition.select(`#${lineId}`).attr(\"stroke\", \"red\").attr(\"stroke-width\", 2).attr(\"marker-end\", `url(#${markerId})`);\n    lineAndArrowTransition.select(`#${markerId} path`).attr(\"fill\", \"red\");\n\n    //const line = svg.select(\"#line-0\");\n    //console.log(\"Line found:\", !line.empty());\n\n    return Promise.resolve(lineAndArrowTransition.end());\n  }\n}","map":{"version":3,"names":["FAHighlightInstruction","constructor","nodeFrom","nodeTo","process","svg","selectAll","attr","lineId","markerId","lineAndArrowTransition","transition","duration","select","Promise","resolve","end"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/highlight_fa_node_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport d3, {BaseType, Selection} from \"d3\";\r\n\r\nexport class FAHighlightInstruction implements Instruction {\r\n\r\n    private nodeFrom: string | number;\r\n    private nodeTo: string | number;\r\n\r\n    constructor(nodeFrom: string | number, nodeTo: string | number) {\r\n        this.nodeFrom = nodeFrom;\r\n        this.nodeTo = nodeTo;\r\n    }\r\n\r\n    process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n\r\n        // Reset color\r\n        svg.selectAll(\"line[id^='line-']\")\r\n            .attr(\"stroke\", \"black\")\r\n            .attr(\"stroke-width\", 1);\r\n\r\n        svg.selectAll(\"marker[id^='arrow-'] path\")\r\n            .attr(\"fill\", \"black\");\r\n\r\n\r\n        // Highlights the arrow\r\n        const lineId = `line-${this.nodeFrom}-${this.nodeTo}`;\r\n        const markerId = `arrow-${this.nodeFrom}-${this.nodeTo}`;\r\n        const lineAndArrowTransition = svg.transition().duration(1000);\r\n\r\n        lineAndArrowTransition\r\n            .select(`#${lineId}`)\r\n            .attr(\"stroke\", \"red\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr(\"marker-end\", `url(#${markerId})`);\r\n\r\n        lineAndArrowTransition\r\n            .select(`#${markerId} path`)\r\n            .attr(\"fill\", \"red\");\r\n\r\n\r\n        //const line = svg.select(\"#line-0\");\r\n        //console.log(\"Line found:\", !line.empty());\r\n\r\n        return Promise.resolve(lineAndArrowTransition.end());\r\n    }\r\n\r\n}"],"mappings":"AAGA,OAAO,MAAMA,sBAAsB,CAAwB;EAKvDC,WAAWA,CAACC,QAAyB,EAAEC,MAAuB,EAAE;IAAA,KAHxDD,QAAQ;IAAA,KACRC,MAAM;IAGV,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EAEAC,OAAOA,CAACC,GAAmD,EAAiB;IAExE;IACAA,GAAG,CAACC,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAE5BF,GAAG,CAACC,SAAS,CAAC,2BAA2B,CAAC,CACrCC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;;IAG1B;IACA,MAAMC,MAAM,GAAG,QAAQ,IAAI,CAACN,QAAQ,IAAI,IAAI,CAACC,MAAM,EAAE;IACrD,MAAMM,QAAQ,GAAG,SAAS,IAAI,CAACP,QAAQ,IAAI,IAAI,CAACC,MAAM,EAAE;IACxD,MAAMO,sBAAsB,GAAGL,GAAG,CAACM,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC;IAE9DF,sBAAsB,CACjBG,MAAM,CAAC,IAAIL,MAAM,EAAE,CAAC,CACpBD,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CACrBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,YAAY,EAAE,QAAQE,QAAQ,GAAG,CAAC;IAE5CC,sBAAsB,CACjBG,MAAM,CAAC,IAAIJ,QAAQ,OAAO,CAAC,CAC3BF,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;;IAGxB;IACA;;IAEA,OAAOO,OAAO,CAACC,OAAO,CAACL,sBAAsB,CAACM,GAAG,CAAC,CAAC,CAAC;EACxD;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}