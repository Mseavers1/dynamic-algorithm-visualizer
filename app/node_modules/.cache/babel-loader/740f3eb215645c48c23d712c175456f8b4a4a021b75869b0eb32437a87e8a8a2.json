{"ast":null,"code":"import*as d3 from\"d3\";export class FAShowArrowInstruction{constructor(index){this.index=void 0;this.index=index;}async process(svg){const duration=300;const currentLineId=`#input-${this.index}`;const currentArrowId=`#arrow-input-${this.index} path`;const prevLineId=`#input-${this.index-1}`;const prevArrowId=`#arrow-input-${this.index-1} path`;// Fade in the current line\nd3.select(currentLineId).transition().duration(duration).style(\"opacity\",1);// Fade in the current arrowhead path\nd3.select(currentArrowId).transition().duration(duration).style(\"opacity\",1);// Fade out the previous line (if it exists)\nd3.select(prevLineId).transition().duration(duration).style(\"opacity\",0);// Fade out the previous arrowhead path (if it exists)\nd3.select(prevArrowId).transition().duration(duration).style(\"opacity\",0);return Promise.resolve();}}","map":{"version":3,"names":["d3","FAShowArrowInstruction","constructor","index","process","svg","duration","currentLineId","currentArrowId","prevLineId","prevArrowId","select","transition","style","Promise","resolve"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/fa_show_arrow_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport class FAShowArrowInstruction implements Instruction {\r\n\r\n    index: number;\r\n\r\n    constructor(index: number) {\r\n        this.index = index;\r\n    }\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        const duration = 300;\r\n\r\n        const currentLineId = `#input-${this.index}`;\r\n        const currentArrowId = `#arrow-input-${this.index} path`;\r\n\r\n        const prevLineId = `#input-${this.index - 1}`;\r\n        const prevArrowId = `#arrow-input-${this.index - 1} path`;\r\n\r\n        // Fade in the current line\r\n        d3.select<SVGLineElement, unknown>(currentLineId)\r\n            .transition()\r\n            .duration(duration)\r\n            .style(\"opacity\", 1);\r\n\r\n        // Fade in the current arrowhead path\r\n        d3.select<SVGPathElement, unknown>(currentArrowId)\r\n            .transition()\r\n            .duration(duration)\r\n            .style(\"opacity\", 1);\r\n\r\n        // Fade out the previous line (if it exists)\r\n        d3.select<SVGLineElement, unknown>(prevLineId)\r\n            .transition()\r\n            .duration(duration)\r\n            .style(\"opacity\", 0);\r\n\r\n        // Fade out the previous arrowhead path (if it exists)\r\n        d3.select<SVGPathElement, unknown>(prevArrowId)\r\n            .transition()\r\n            .duration(duration)\r\n            .style(\"opacity\", 0);\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n\r\n}"],"mappings":"AAEA,MAAO,GAAK,CAAAA,EAAE,KAAM,IAAI,CAExB,MAAO,MAAM,CAAAC,sBAA8C,CAIvDC,WAAWA,CAACC,KAAa,CAAE,MAF3BA,KAAK,QAGD,IAAI,CAACA,KAAK,CAAGA,KAAK,CACtB,CAEA,KAAM,CAAAC,OAAOA,CAACC,GAAmD,CAAiB,CAC9E,KAAM,CAAAC,QAAQ,CAAG,GAAG,CAEpB,KAAM,CAAAC,aAAa,CAAG,UAAU,IAAI,CAACJ,KAAK,EAAE,CAC5C,KAAM,CAAAK,cAAc,CAAG,gBAAgB,IAAI,CAACL,KAAK,OAAO,CAExD,KAAM,CAAAM,UAAU,CAAG,UAAU,IAAI,CAACN,KAAK,CAAG,CAAC,EAAE,CAC7C,KAAM,CAAAO,WAAW,CAAG,gBAAgB,IAAI,CAACP,KAAK,CAAG,CAAC,OAAO,CAEzD;AACAH,EAAE,CAACW,MAAM,CAA0BJ,aAAa,CAAC,CAC5CK,UAAU,CAAC,CAAC,CACZN,QAAQ,CAACA,QAAQ,CAAC,CAClBO,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB;AACAb,EAAE,CAACW,MAAM,CAA0BH,cAAc,CAAC,CAC7CI,UAAU,CAAC,CAAC,CACZN,QAAQ,CAACA,QAAQ,CAAC,CAClBO,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB;AACAb,EAAE,CAACW,MAAM,CAA0BF,UAAU,CAAC,CACzCG,UAAU,CAAC,CAAC,CACZN,QAAQ,CAACA,QAAQ,CAAC,CAClBO,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB;AACAb,EAAE,CAACW,MAAM,CAA0BD,WAAW,CAAC,CAC1CE,UAAU,CAAC,CAAC,CACZN,QAAQ,CAACA,QAAQ,CAAC,CAClBO,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB,MAAO,CAAAC,OAAO,CAACC,OAAO,CAAC,CAAC,CAC5B,CAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}