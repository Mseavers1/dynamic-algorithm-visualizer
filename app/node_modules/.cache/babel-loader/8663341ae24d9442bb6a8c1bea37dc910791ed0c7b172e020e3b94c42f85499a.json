{"ast":null,"code":"export class TreeClearInstruction{constructor(nodes){this.nodes=void 0;this.nodes=nodes;}async process(svg){let transitions=[];// Animates the nodes being removed\nfor(const node of this.nodes){const removeNodeTransition=node.element.transition().duration(500).style(\"opacity\",0);const removeLabelTransition=node.label.transition().duration(500).style(\"opacity\",0);let edgeTransitionPromise=null;// Animates the edges removing themselves\nif(node.edge){const removeEdgeTransition=node.edge.transition().duration(500).style(\"opacity\",0);edgeTransitionPromise=removeEdgeTransition.end();transitions.push(edgeTransitionPromise);}transitions.push(removeNodeTransition.end());transitions.push(removeLabelTransition.end());}await Promise.all(transitions);// Removes the edges\nfor(const node of this.nodes){node.element.remove();node.label.remove();if(node.edge){node.edge.remove();}}}}","map":{"version":3,"names":["TreeClearInstruction","constructor","nodes","process","svg","transitions","node","removeNodeTransition","element","transition","duration","style","removeLabelTransition","label","edgeTransitionPromise","edge","removeEdgeTransition","end","push","Promise","all","remove"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/tree_clear_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\nimport {Node} from \"../pictures/node\";\r\n\r\nexport class TreeClearInstruction implements Instruction {\r\n\r\n    nodes : Node[];\r\n\r\n    constructor(nodes : Node[]) {\r\n        this.nodes = nodes;\r\n    }\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n\r\n        let transitions = [];\r\n\r\n        // Animates the nodes being removed\r\n        for (const node of this.nodes) {\r\n\r\n            const removeNodeTransition = node.element.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0);\r\n\r\n            const removeLabelTransition = node.label.transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0)\r\n\r\n            let edgeTransitionPromise: Promise<void> | null = null;\r\n\r\n            // Animates the edges removing themselves\r\n            if (node.edge) {\r\n                const removeEdgeTransition = node.edge.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0)\r\n\r\n                edgeTransitionPromise = removeEdgeTransition.end();\r\n                transitions.push(edgeTransitionPromise);\r\n            }\r\n\r\n            transitions.push(removeNodeTransition.end());\r\n            transitions.push(removeLabelTransition.end());\r\n        }\r\n\r\n        await Promise.all(transitions);\r\n\r\n        // Removes the edges\r\n        for (const node of this.nodes) {\r\n\r\n            node.element.remove();\r\n            node.label.remove();\r\n\r\n            if (node.edge) {\r\n                node.edge.remove();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}"],"mappings":"AAIA,MAAO,MAAM,CAAAA,oBAA4C,CAIrDC,WAAWA,CAACC,KAAc,CAAE,MAF5BA,KAAK,QAGD,IAAI,CAACA,KAAK,CAAGA,KAAK,CACtB,CAEA,KAAM,CAAAC,OAAOA,CAACC,GAAmD,CAAiB,CAE9E,GAAI,CAAAC,WAAW,CAAG,EAAE,CAEpB;AACA,IAAK,KAAM,CAAAC,IAAI,GAAI,KAAI,CAACJ,KAAK,CAAE,CAE3B,KAAM,CAAAK,oBAAoB,CAAGD,IAAI,CAACE,OAAO,CAACC,UAAU,CAAC,CAAC,CACjDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB,KAAM,CAAAC,qBAAqB,CAAGN,IAAI,CAACO,KAAK,CAACJ,UAAU,CAAC,CAAC,CAChDC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExB,GAAI,CAAAG,qBAA2C,CAAG,IAAI,CAEtD;AACA,GAAIR,IAAI,CAACS,IAAI,CAAE,CACX,KAAM,CAAAC,oBAAoB,CAAGV,IAAI,CAACS,IAAI,CAACN,UAAU,CAAC,CAAC,CAC9CC,QAAQ,CAAC,GAAG,CAAC,CACbC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CAExBG,qBAAqB,CAAGE,oBAAoB,CAACC,GAAG,CAAC,CAAC,CAClDZ,WAAW,CAACa,IAAI,CAACJ,qBAAqB,CAAC,CAC3C,CAEAT,WAAW,CAACa,IAAI,CAACX,oBAAoB,CAACU,GAAG,CAAC,CAAC,CAAC,CAC5CZ,WAAW,CAACa,IAAI,CAACN,qBAAqB,CAACK,GAAG,CAAC,CAAC,CAAC,CACjD,CAEA,KAAM,CAAAE,OAAO,CAACC,GAAG,CAACf,WAAW,CAAC,CAE9B;AACA,IAAK,KAAM,CAAAC,IAAI,GAAI,KAAI,CAACJ,KAAK,CAAE,CAE3BI,IAAI,CAACE,OAAO,CAACa,MAAM,CAAC,CAAC,CACrBf,IAAI,CAACO,KAAK,CAACQ,MAAM,CAAC,CAAC,CAEnB,GAAIf,IAAI,CAACS,IAAI,CAAE,CACXT,IAAI,CAACS,IAAI,CAACM,MAAM,CAAC,CAAC,CACtB,CAEJ,CACJ,CAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}