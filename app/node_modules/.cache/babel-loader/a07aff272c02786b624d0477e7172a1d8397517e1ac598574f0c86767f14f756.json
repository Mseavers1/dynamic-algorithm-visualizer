{"ast":null,"code":"export class FAFadeAllInstruction{constructor(){this.fade_time=500;}async process(svg){const promises=[];// Fade out all line elements\npromises.push(new Promise(resolve=>{svg.selectAll(\"line[id^='line-']\").transition().duration(this.fade_time).attr(\"stroke\",\"black\").attr(\"stroke-width\",2).on(\"end\",()=>resolve());}));// Fade out all path elements\npromises.push(new Promise(resolve=>{svg.selectAll(\"path[id^='line-']\").transition().duration(this.fade_time).attr(\"stroke\",\"black\").attr(\"stroke-width\",2).on(\"end\",()=>resolve());}));// Fade out all marker arrowheads\npromises.push(new Promise(resolve=>{svg.selectAll(\"marker[id^='arrow-'] path, defs marker path\").transition().duration(this.fade_time).attr(\"fill\",\"black\").on(\"end\",()=>resolve());}));await Promise.all(promises);}}","map":{"version":3,"names":["FAFadeAllInstruction","constructor","fade_time","process","svg","promises","push","Promise","resolve","selectAll","transition","duration","attr","on","all"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/fa_fade_all_instruction.tsx"],"sourcesContent":["import { Instruction } from \"./i_instruction\";\r\nimport { BaseType, Selection } from \"d3\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport class FAFadeAllInstruction implements Instruction {\r\n\r\n    fade_time = 500;\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        const promises = [];\r\n\r\n        // Fade out all line elements\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"line[id^='line-']\")\r\n                    .transition()\r\n                    .duration(this.fade_time)\r\n                    .attr(\"stroke\", \"black\")\r\n                    .attr(\"stroke-width\", 2)\r\n                    .on(\"end\", () => resolve());\r\n            })\r\n        );\r\n\r\n        // Fade out all path elements\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"path[id^='line-']\")\r\n                    .transition()\r\n                    .duration(this.fade_time)\r\n                    .attr(\"stroke\", \"black\")\r\n                    .attr(\"stroke-width\", 2)\r\n                    .on(\"end\", () => resolve());\r\n            })\r\n        );\r\n\r\n        // Fade out all marker arrowheads\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"marker[id^='arrow-'] path, defs marker path\")\r\n                    .transition()\r\n                    .duration(this.fade_time)\r\n                    .attr(\"fill\", \"black\")\r\n                    .on(\"end\", () => resolve());\r\n            })\r\n        );\r\n\r\n        await Promise.all(promises);\r\n    }\r\n}\r\n"],"mappings":"AAIA,MAAO,MAAM,CAAAA,oBAA4C,CAAAC,YAAA,OAErDC,SAAS,CAAG,GAAG,EAEf,KAAM,CAAAC,OAAOA,CAACC,GAAmD,CAAiB,CAC9E,KAAM,CAAAC,QAAQ,CAAG,EAAE,CAEnB;AACAA,QAAQ,CAACC,IAAI,CACT,GAAI,CAAAC,OAAO,CAAQC,OAAO,EAAK,CAC3BJ,GAAG,CAACK,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CACxBU,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CACvBC,EAAE,CAAC,KAAK,CAAE,IAAML,OAAO,CAAC,CAAC,CAAC,CACnC,CAAC,CACL,CAAC,CAED;AACAH,QAAQ,CAACC,IAAI,CACT,GAAI,CAAAC,OAAO,CAAQC,OAAO,EAAK,CAC3BJ,GAAG,CAACK,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CACxBU,IAAI,CAAC,QAAQ,CAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CACvBC,EAAE,CAAC,KAAK,CAAE,IAAML,OAAO,CAAC,CAAC,CAAC,CACnC,CAAC,CACL,CAAC,CAED;AACAH,QAAQ,CAACC,IAAI,CACT,GAAI,CAAAC,OAAO,CAAQC,OAAO,EAAK,CAC3BJ,GAAG,CAACK,SAAS,CAAC,6CAA6C,CAAC,CACvDC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CACxBU,IAAI,CAAC,MAAM,CAAE,OAAO,CAAC,CACrBC,EAAE,CAAC,KAAK,CAAE,IAAML,OAAO,CAAC,CAAC,CAAC,CACnC,CAAC,CACL,CAAC,CAED,KAAM,CAAAD,OAAO,CAACO,GAAG,CAACT,QAAQ,CAAC,CAC/B,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}