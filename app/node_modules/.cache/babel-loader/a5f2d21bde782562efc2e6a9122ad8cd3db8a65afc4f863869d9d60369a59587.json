{"ast":null,"code":"export class FAAddInputInstruction {\n  constructor(input) {\n    this.input = void 0;\n    this.input = input;\n  }\n  async process(svg) {\n    let x = 10;\n    let y = 30;\n    const verticalSpacing = 20;\n\n    // Loop through the input string and create labels for each letter\n    for (const letter of this.input) {\n      this.createLabel(svg, letter, x, y); // Create the label\n      y += verticalSpacing; // Increment Y position for the next label\n    }\n    return Promise.resolve(undefined);\n  }\n  createLabel(svg, text, x, y, fontSize = 24, fontColor = \"black\", fontWeight = \"normal\") {\n    svg.append(\"text\").attr(\"x\", x).attr(\"y\", y).attr(\"font-size\", fontSize).attr(\"fill\", fontColor).attr(\"font-weight\", fontWeight).text(text);\n  }\n}","map":{"version":3,"names":["FAAddInputInstruction","constructor","input","process","svg","x","y","verticalSpacing","letter","createLabel","Promise","resolve","undefined","text","fontSize","fontColor","fontWeight","append","attr"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/fa_add_input_instruction.tsx"],"sourcesContent":["import {Instruction} from \"./i_instruction\";\r\nimport {BaseType, Selection} from \"d3\";\r\n\r\nexport class FAAddInputInstruction implements Instruction {\r\n\r\n    private input: string;\r\n\r\n    constructor(input: string) {\r\n        this.input = input;\r\n    }\r\n\r\n    async process(svg: d3.Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        let x = 10;\r\n        let y = 30;\r\n        const verticalSpacing = 20;\r\n\r\n        // Loop through the input string and create labels for each letter\r\n        for (const letter of this.input) {\r\n            this.createLabel(svg, letter, x, y); // Create the label\r\n            y += verticalSpacing; // Increment Y position for the next label\r\n        }\r\n\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n\r\n    createLabel(svg: d3.Selection<BaseType, unknown, HTMLElement, any>, text: string, x: number, y: number, fontSize: number = 24, fontColor: string = \"black\", fontWeight: string = \"normal\"): void {\r\n        svg.append(\"text\")\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", y)\r\n            .attr(\"font-size\", fontSize)\r\n            .attr(\"fill\", fontColor)\r\n            .attr(\"font-weight\", fontWeight)\r\n            .text(text);\r\n    }\r\n\r\n\r\n\r\n}"],"mappings":"AAGA,OAAO,MAAMA,qBAAqB,CAAwB;EAItDC,WAAWA,CAACC,KAAa,EAAE;IAAA,KAFnBA,KAAK;IAGT,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEA,MAAMC,OAAOA,CAACC,GAAsD,EAAiB;IACjF,IAAIC,CAAC,GAAG,EAAE;IACV,IAAIC,CAAC,GAAG,EAAE;IACV,MAAMC,eAAe,GAAG,EAAE;;IAE1B;IACA,KAAK,MAAMC,MAAM,IAAI,IAAI,CAACN,KAAK,EAAE;MAC7B,IAAI,CAACO,WAAW,CAACL,GAAG,EAAEI,MAAM,EAAEH,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;MACrCA,CAAC,IAAIC,eAAe,CAAC,CAAC;IAC1B;IAEA,OAAOG,OAAO,CAACC,OAAO,CAACC,SAAS,CAAC;EACrC;EAGAH,WAAWA,CAACL,GAAsD,EAAES,IAAY,EAAER,CAAS,EAAEC,CAAS,EAAEQ,QAAgB,GAAG,EAAE,EAAEC,SAAiB,GAAG,OAAO,EAAEC,UAAkB,GAAG,QAAQ,EAAQ;IAC7LZ,GAAG,CAACa,MAAM,CAAC,MAAM,CAAC,CACbC,IAAI,CAAC,GAAG,EAAEb,CAAC,CAAC,CACZa,IAAI,CAAC,GAAG,EAAEZ,CAAC,CAAC,CACZY,IAAI,CAAC,WAAW,EAAEJ,QAAQ,CAAC,CAC3BI,IAAI,CAAC,MAAM,EAAEH,SAAS,CAAC,CACvBG,IAAI,CAAC,aAAa,EAAEF,UAAU,CAAC,CAC/BH,IAAI,CAACA,IAAI,CAAC;EACnB;AAIJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}