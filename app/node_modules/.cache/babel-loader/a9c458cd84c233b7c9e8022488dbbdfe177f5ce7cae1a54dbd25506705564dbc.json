{"ast":null,"code":"import{FA_Node}from\"./fa_node\";export class FA_Graph{constructor(){this.starting_node=void 0;this.final_nodes=void 0;this.nodes=void 0;this.starting_node=null;this.final_nodes=[];this.nodes=new Map();}get_nodes(){return this.nodes;}get_node(node){return this.nodes.get(node);}get_pointers(node){var _this$nodes$get;return(_this$nodes$get=this.nodes.get(node))===null||_this$nodes$get===void 0?void 0:_this$nodes$get.get_pointers();}create_node(node){let is_starting_node=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;let is_final_node=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;this.nodes.set(node,new FA_Node(node));if(is_starting_node){var _this$nodes$get2;this.starting_node=(_this$nodes$get2=this.nodes.get(node))!==null&&_this$nodes$get2!==void 0?_this$nodes$get2:null;}if(is_final_node){this.final_nodes.push(this.nodes.get(node));}}add_node_pointers(value,weight,pointsTo){const fromNode=this.nodes.get(value);const toNode=this.nodes.get(pointsTo);if(!fromNode||!toNode){console.warn(`Cannot add pointer: ${value} or ${pointsTo} not found`);return;}fromNode.add_pointer(toNode,weight);}set_starting_node(value){var _this$nodes$get3;this.starting_node=(_this$nodes$get3=this.nodes.get(value))!==null&&_this$nodes$get3!==void 0?_this$nodes$get3:null;}add_final_node(value){this.final_nodes.push(this.nodes.get(value));}has_starting_node(){return this.starting_node!=null;}has_one_final_node(){return this.final_nodes.length>0;}is_final_node(value){const node=this.nodes.get(value);if(!node)return false;return this.final_nodes.includes(node);}is_starting_node(value){return this.starting_node==this.nodes.get(value);}get_starting_node(){return this.starting_node;}}","map":{"version":3,"names":["FA_Node","FA_Graph","constructor","starting_node","final_nodes","nodes","Map","get_nodes","get_node","node","get","get_pointers","_this$nodes$get","create_node","is_starting_node","arguments","length","undefined","is_final_node","set","_this$nodes$get2","push","add_node_pointers","value","weight","pointsTo","fromNode","toNode","console","warn","add_pointer","set_starting_node","_this$nodes$get3","add_final_node","has_starting_node","has_one_final_node","includes","get_starting_node"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/structures/fa_graph.tsx"],"sourcesContent":["import {FA_Node} from \"./fa_node\";\r\n\r\nexport class FA_Graph {\r\n\r\n    private starting_node: FA_Node | null;\r\n    private final_nodes: FA_Node[];\r\n\r\n    private nodes: Map<string | number, FA_Node>;\r\n\r\n    constructor() {\r\n        this.starting_node = null;\r\n        this.final_nodes = [];\r\n        this.nodes = new Map<string | number, FA_Node>();\r\n    }\r\n\r\n    get_nodes() {\r\n        return this.nodes;\r\n    }\r\n\r\n    get_node(node: string | number) {\r\n        return this.nodes.get(node);\r\n    }\r\n\r\n    get_pointers(node: string | number) {\r\n        return this.nodes.get(node)?.get_pointers();\r\n    }\r\n\r\n    create_node(node: (string | number), is_starting_node: boolean = false, is_final_node: boolean = false): void {\r\n        this.nodes.set(node, new FA_Node(node));\r\n\r\n        if (is_starting_node) {\r\n            this.starting_node = this.nodes.get(node) ?? null;\r\n        }\r\n\r\n        if (is_final_node) {\r\n            this.final_nodes.push(this.nodes.get(node) as FA_Node);\r\n        }\r\n    }\r\n\r\n    add_node_pointers(value: string | number, weight: (string | number)[], pointsTo: string | number): void {\r\n        const fromNode = this.nodes.get(value);\r\n        const toNode = this.nodes.get(pointsTo);\r\n\r\n        if (!fromNode || !toNode) {\r\n            console.warn(`Cannot add pointer: ${value} or ${pointsTo} not found`);\r\n            return;\r\n        }\r\n\r\n        fromNode.add_pointer(toNode, weight);\r\n    }\r\n\r\n    set_starting_node(value: string | number): void {\r\n        this.starting_node = this.nodes.get(value) ?? null;\r\n    }\r\n\r\n    add_final_node(value: string | number) {\r\n        this.final_nodes.push(this.nodes.get(value) as FA_Node);\r\n    }\r\n\r\n    has_starting_node(): boolean {\r\n        return this.starting_node != null;\r\n    }\r\n\r\n    has_one_final_node(): boolean {\r\n        return this.final_nodes.length > 0;\r\n    }\r\n\r\n    is_final_node(value: string | number): boolean {\r\n        const node = this.nodes.get(value);\r\n        if (!node) return false;\r\n        return this.final_nodes.includes(node);\r\n    }\r\n\r\n    is_starting_node(value: string | number) {\r\n        return this.starting_node == this.nodes.get(value);\r\n    }\r\n\r\n    get_starting_node() {\r\n        return this.starting_node;\r\n    }\r\n\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}