{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micha\\\\Documents\\\\GitHub\\\\dynamic-algorithm-visualizer\\\\app\\\\src\\\\components\\\\animator.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MinHeap } from \"./algorithms/min_heap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Animator = () => {\n  _s();\n  const {\n    algorithmType\n  } = useParams();\n  const header = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-20 left-0 right-0 bg-animator-bars text-white flex items-center justify-between p-4\",\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  };\n  const footer = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-8 left-0 right-0 bg-animator-bars text-white flex items-center justify-between p-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  };\n  let algorithm = RetrieveAlgorithm(algorithmType);\n  if (!algorithm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nothing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex bg-white items-center justify-center min-h-screen\",\n    children: [header(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Algorithm Animator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), algorithm.display()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), footer()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Animator, \"aZWhmPHY2T7OkkM3F08UBTZ3mqA=\", false, function () {\n  return [useParams];\n});\n_c = Animator;\nconst RetrieveAlgorithm = algorithmName => {\n  if (algorithmName === \"min-heap\") {\n    return new MinHeap();\n  }\n  return null;\n};\n_c2 = RetrieveAlgorithm;\nexport default Animator;\nvar _c, _c2;\n$RefreshReg$(_c, \"Animator\");\n$RefreshReg$(_c2, \"RetrieveAlgorithm\");","map":{"version":3,"names":["React","useParams","MinHeap","jsxDEV","_jsxDEV","Animator","_s","algorithmType","header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","footer","algorithm","RetrieveAlgorithm","display","_c","algorithmName","_c2","$RefreshReg$"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/animator.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {Algorithm} from \"./algorithms/algorithm_interface\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport {MinHeap} from \"./algorithms/min_heap\";\r\n\r\nconst Animator: React.FC = () => {\r\n\r\n    const {algorithmType} = useParams<{algorithmType: string}>();\r\n\r\n    const header= () => {\r\n        return (\r\n            <div className=\"fixed top-20 left-0 right-0 bg-animator-bars text-white flex items-center justify-between p-4\">\r\n                Test\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const footer= () => {\r\n        return (\r\n            <div className=\"fixed bottom-8 left-0 right-0 bg-animator-bars text-white flex items-center justify-between p-4\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let algorithm: Algorithm | null = RetrieveAlgorithm(algorithmType);\r\n\r\n    if (!algorithm) {\r\n        return (<div>Nothing</div>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex bg-white items-center justify-center min-h-screen\">\r\n\r\n            {/** Header **/}\r\n            {header()}\r\n\r\n            {/** Body **/}\r\n            <div className=\"text-center\">\r\n                <h1 className=\"text-2xl font-bold mb-4\">Algorithm Animator</h1>\r\n                {algorithm.display()}\r\n            </div>\r\n\r\n            {/** Footer **/}\r\n            {footer()}\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst RetrieveAlgorithm = (algorithmName: string | undefined): Algorithm | null => {\r\n\r\n    if (algorithmName === \"min-heap\") {\r\n        return new MinHeap();\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default Animator;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAQC,SAAS,QAAO,kBAAkB;AAE1C,SAAQC,OAAO,QAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAM;IAACC;EAAa,CAAC,GAAGN,SAAS,CAA0B,CAAC;EAE5D,MAAMO,MAAM,GAAEA,CAAA,KAAM;IAChB,oBACIJ,OAAA;MAAKK,SAAS,EAAC,+FAA+F;MAAAC,QAAA,EAAC;IAE/G;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEd,CAAC;EAED,MAAMC,MAAM,GAAEA,CAAA,KAAM;IAChB,oBACIX,OAAA;MAAKK,SAAS,EAAC;IAAiG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3G,CAAC;EAEd,CAAC;EAED,IAAIE,SAA2B,GAAGC,iBAAiB,CAACV,aAAa,CAAC;EAElE,IAAI,CAACS,SAAS,EAAE;IACZ,oBAAQZ,OAAA;MAAAM,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACIV,OAAA;IAAKK,SAAS,EAAC,wDAAwD;IAAAC,QAAA,GAGlEF,MAAM,CAAC,CAAC,eAGTJ,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBN,OAAA;QAAIK,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9DE,SAAS,CAACE,OAAO,CAAC,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,EAGLC,MAAM,CAAC,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAGd,CAAC;AAACR,EAAA,CA5CID,QAAkB;EAAA,QAEIJ,SAAS;AAAA;AAAAkB,EAAA,GAF/Bd,QAAkB;AA8CxB,MAAMY,iBAAiB,GAAIG,aAAiC,IAAuB;EAE/E,IAAIA,aAAa,KAAK,UAAU,EAAE;IAC9B,OAAO,IAAIlB,OAAO,CAAC,CAAC;EACxB;EAEA,OAAO,IAAI;AACf,CAAC;AAAAmB,GAAA,GAPKJ,iBAAiB;AASvB,eAAeZ,QAAQ;AAAC,IAAAc,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}