{"ast":null,"code":"// Class setup to handle all animations by using instructions that are defined outside this class\n\nimport * as d3 from \"d3\";\nexport class AnimationPlayer {\n  constructor(setIsAnimating) {\n    this.setIsAnimating = setIsAnimating;\n    // Queue of instructions\n    this.instructions = void 0;\n    // Processes all the instructions in the queue\n    this.processInstructions = async () => {\n      // Base Case\n      if (this.instructions.length === 0) {\n        this.setIsAnimating(false);\n        return;\n      }\n      this.setIsAnimating(true);\n\n      // Gets and removes the first instruction\n      const instruction = this.instructions.shift();\n      const svg = d3.select(\"#svg-container\").attr(\"width\", 600).attr(\"height\", 500);\n      if (svg.select(\"defs\").empty()) {\n        const defs = svg.append(\"defs\");\n        defs.append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 30).attr(\"refY\", 5).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto-start-reverse\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"fill\", \"black\");\n      }\n      if (instruction) {\n        await instruction.process(svg);\n        await this.processInstructions();\n      }\n    };\n    this.instructions = [];\n  }\n\n  // Adds a new instruction into the queue\n  addInstruction(instruction) {\n    this.instructions.push(instruction);\n  }\n}","map":{"version":3,"names":["d3","AnimationPlayer","constructor","setIsAnimating","instructions","processInstructions","length","instruction","shift","svg","select","attr","empty","defs","append","process","addInstruction","push"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/animation_player.tsx"],"sourcesContent":["// Class setup to handle all animations by using instructions that are defined outside this class\r\nimport {Instruction} from \"./Instructions/i_instruction\";\r\nimport {Picture} from \"./pictures/i_picture\";\r\nimport * as d3 from \"d3\";\r\nimport {BaseType} from \"d3\";\r\n\r\nexport class AnimationPlayer {\r\n\r\n    // Queue of instructions\r\n    private instructions : Instruction[];\r\n\r\n    constructor(private setIsAnimating: (value: boolean) => void) {\r\n        this.instructions = [];\r\n    }\r\n\r\n    // Adds a new instruction into the queue\r\n    addInstruction(instruction : Instruction) {\r\n        this.instructions.push(instruction);\r\n    }\r\n\r\n    // Processes all the instructions in the queue\r\n    processInstructions = async()=> {\r\n\r\n        // Base Case\r\n        if (this.instructions.length === 0) {\r\n            this.setIsAnimating(false);\r\n            return;\r\n        }\r\n\r\n        this.setIsAnimating(true);\r\n\r\n        // Gets and removes the first instruction\r\n        const instruction = this.instructions.shift();\r\n\r\n        const svg = d3.select(\"#svg-container\").attr(\"width\", 600).attr(\"height\", 500);\r\n\r\n        if (svg.select(\"defs\").empty()) {\r\n            const defs = svg.append(\"defs\");\r\n\r\n            defs.append(\"marker\")\r\n                .attr(\"id\", \"arrow\")\r\n                .attr(\"viewBox\", \"0 0 10 10\")\r\n                .attr(\"refX\", 30)\r\n                .attr(\"refY\", 5)\r\n                .attr(\"markerWidth\", 6)\r\n                .attr(\"markerHeight\", 6)\r\n                .attr(\"orient\", \"auto-start-reverse\")\r\n                .append(\"path\")\r\n                .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\r\n                .attr(\"fill\", \"black\");\r\n        }\r\n\r\n        if (instruction) {\r\n            await instruction.process(svg);\r\n            await this.processInstructions();\r\n        }\r\n    }\r\n\r\n}"],"mappings":"AAAA;;AAGA,OAAO,KAAKA,EAAE,MAAM,IAAI;AAGxB,OAAO,MAAMC,eAAe,CAAC;EAKzBC,WAAWA,CAASC,cAAwC,EAAE;IAAA,KAA1CA,cAAwC,GAAxCA,cAAwC;IAH5D;IAAA,KACQC,YAAY;IAWpB;IAAA,KACAC,mBAAmB,GAAG,YAAU;MAE5B;MACA,IAAI,IAAI,CAACD,YAAY,CAACE,MAAM,KAAK,CAAC,EAAE;QAChC,IAAI,CAACH,cAAc,CAAC,KAAK,CAAC;QAC1B;MACJ;MAEA,IAAI,CAACA,cAAc,CAAC,IAAI,CAAC;;MAEzB;MACA,MAAMI,WAAW,GAAG,IAAI,CAACH,YAAY,CAACI,KAAK,CAAC,CAAC;MAE7C,MAAMC,GAAG,GAAGT,EAAE,CAACU,MAAM,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAACA,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;MAE9E,IAAIF,GAAG,CAACC,MAAM,CAAC,MAAM,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE;QAC5B,MAAMC,IAAI,GAAGJ,GAAG,CAACK,MAAM,CAAC,MAAM,CAAC;QAE/BD,IAAI,CAACC,MAAM,CAAC,QAAQ,CAAC,CAChBH,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAC5BA,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAChBA,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CACfA,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,QAAQ,EAAE,oBAAoB,CAAC,CACpCG,MAAM,CAAC,MAAM,CAAC,CACdH,IAAI,CAAC,GAAG,EAAE,uBAAuB,CAAC,CAClCA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;MAC9B;MAEA,IAAIJ,WAAW,EAAE;QACb,MAAMA,WAAW,CAACQ,OAAO,CAACN,GAAG,CAAC;QAC9B,MAAM,IAAI,CAACJ,mBAAmB,CAAC,CAAC;MACpC;IACJ,CAAC;IA5CG,IAAI,CAACD,YAAY,GAAG,EAAE;EAC1B;;EAEA;EACAY,cAAcA,CAACT,WAAyB,EAAE;IACtC,IAAI,CAACH,YAAY,CAACa,IAAI,CAACV,WAAW,CAAC;EACvC;AAwCJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}