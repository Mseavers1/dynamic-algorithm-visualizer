{"ast":null,"code":"export class FAFadeAllInstruction {\n  async process(svg) {\n    // Create an array of promises for all transitions\n    const promises = [];\n\n    // Fade out all line elements (straight lines) to opacity 0\n    promises.push(new Promise(resolve => {\n      svg.selectAll(\"line[id^='line-']\").transition().duration(1000).attr(\"stroke\", \"black\") // Fade to black\n      .attr(\"stroke-width\", 2).on(\"end\", resolve); // Resolve the promise when the transition ends\n    }));\n\n    // Fade out all path elements (curved lines) to opacity 0\n    promises.push(new Promise(resolve => {\n      svg.selectAll(\"path[id^='line-']\").transition().duration(1000).attr(\"stroke\", \"black\") // Fade to black\n      .attr(\"stroke-width\", 2).on(\"end\", resolve); // Resolve the promise when the transition ends\n    }));\n\n    // Fade out all marker arrowheads (regardless of trailing dash) to opacity 0\n    promises.push(new Promise(resolve => {\n      svg.selectAll(\"marker[id^='arrow-'] path, defs marker path\").transition().duration(1000).attr(\"fill\", \"black\") // Fade the marker arrowheads to black\n      .on(\"end\", resolve); // Resolve the promise when the transition ends\n    }));\n\n    // Start all transitions at the same time and wait for all to finish\n    await Promise.all(promises);\n\n    // After all transitions are complete, you can perform any follow-up logic\n  }\n}","map":{"version":3,"names":["FAFadeAllInstruction","process","svg","promises","push","Promise","resolve","selectAll","transition","duration","attr","on","all"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/fa_fade_all_instruction.tsx"],"sourcesContent":["import { Instruction } from \"./i_instruction\";\r\nimport { BaseType, Selection } from \"d3\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport class FAFadeAllInstruction implements Instruction {\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        // Create an array of promises for all transitions\r\n        const promises = [];\r\n\r\n        // Fade out all line elements (straight lines) to opacity 0\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"line[id^='line-']\")\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"stroke\", \"black\") // Fade to black\r\n                    .attr(\"stroke-width\", 2)\r\n                    .on(\"end\", resolve); // Resolve the promise when the transition ends\r\n            })\r\n        );\r\n\r\n        // Fade out all path elements (curved lines) to opacity 0\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"path[id^='line-']\")\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"stroke\", \"black\") // Fade to black\r\n                    .attr(\"stroke-width\", 2)\r\n                    .on(\"end\", resolve); // Resolve the promise when the transition ends\r\n            })\r\n        );\r\n\r\n        // Fade out all marker arrowheads (regardless of trailing dash) to opacity 0\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"marker[id^='arrow-'] path, defs marker path\")\r\n                    .transition()\r\n                    .duration(1000)\r\n                    .attr(\"fill\", \"black\") // Fade the marker arrowheads to black\r\n                    .on(\"end\", resolve); // Resolve the promise when the transition ends\r\n            })\r\n        );\r\n\r\n        // Start all transitions at the same time and wait for all to finish\r\n        await Promise.all(promises);\r\n\r\n        // After all transitions are complete, you can perform any follow-up logic\r\n    }\r\n}\r\n"],"mappings":"AAIA,OAAO,MAAMA,oBAAoB,CAAwB;EACrD,MAAMC,OAAOA,CAACC,GAAmD,EAAiB;IAC9E;IACA,MAAMC,QAAQ,GAAG,EAAE;;IAEnB;IACAA,QAAQ,CAACC,IAAI,CACT,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAC3BJ,GAAG,CAACK,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACdC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;MAAA,CACxBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBC,EAAE,CAAC,KAAK,EAAEL,OAAO,CAAC,CAAC,CAAC;IAC7B,CAAC,CACL,CAAC;;IAED;IACAH,QAAQ,CAACC,IAAI,CACT,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAC3BJ,GAAG,CAACK,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACdC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;MAAA,CACxBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBC,EAAE,CAAC,KAAK,EAAEL,OAAO,CAAC,CAAC,CAAC;IAC7B,CAAC,CACL,CAAC;;IAED;IACAH,QAAQ,CAACC,IAAI,CACT,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAC3BJ,GAAG,CAACK,SAAS,CAAC,6CAA6C,CAAC,CACvDC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACdC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;MAAA,CACtBC,EAAE,CAAC,KAAK,EAAEL,OAAO,CAAC,CAAC,CAAC;IAC7B,CAAC,CACL,CAAC;;IAED;IACA,MAAMD,OAAO,CAACO,GAAG,CAACT,QAAQ,CAAC;;IAE3B;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}