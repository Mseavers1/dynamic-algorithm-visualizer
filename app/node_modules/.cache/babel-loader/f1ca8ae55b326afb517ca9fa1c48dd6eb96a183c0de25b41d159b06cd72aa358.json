{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Micha\\\\Documents\\\\GitHub\\\\dynamic-algorithm-visualizer\\\\app\\\\src\\\\components\\\\algorithms\\\\min_heap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MinHeap {\n  display() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TreeStructure, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// Type definition for nodes\n\n// Tree data\nconst treeData = {\n  label: \"Root\",\n  children: [{\n    label: \"Child 1\",\n    children: [{\n      label: \"Subchild 1\"\n    }, {\n      label: \"Subchild 2\"\n    }]\n  }, {\n    label: \"Child 2\",\n    children: [{\n      label: \"Subchild 3\"\n    }]\n  }]\n};\n\n// Recursive component for tree nodes\nconst TreeNode = ({\n  node\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative ml-6\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"flex items-center space-x-2 cursor-pointer bg-blue-500 text-white px-3 py-2 rounded-full shadow-md\",\n      onClick: () => setIsOpen(!isOpen),\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.9\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: isOpen ? \"▼\" : \"▶\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: node.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), node.children && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"absolute left-0 top-1/2 w-6 border-l-2 border-gray-400\",\n      initial: {\n        height: 0\n      },\n      animate: {\n        height: isOpen ? \"20px\" : \"0px\"\n      },\n      transition: {\n        duration: 0.3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: false,\n      animate: {\n        height: isOpen ? \"auto\" : 0,\n        opacity: isOpen ? 1 : 0\n      },\n      transition: {\n        duration: 0.3\n      },\n      className: \"ml-4 border-l-2 border-gray-400 overflow-hidden pl-2\",\n      children: node.children && node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(TreeNode, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = TreeNode;\nvar _c;\n$RefreshReg$(_c, \"TreeNode\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","MinHeap","display","children","TreeStructure","fileName","_jsxFileName","lineNumber","columnNumber","treeData","label","TreeNode","node","_s","isOpen","setIsOpen","className","div","onClick","whileHover","scale","whileTap","initial","height","animate","transition","duration","opacity","map","child","index","_c","$RefreshReg$"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/algorithms/min_heap.tsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {Algorithm} from \"./algorithm_interface\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport class MinHeap implements Algorithm {\r\n\r\n    display() {\r\n\r\n        return (\r\n            <div>\r\n                <TreeStructure/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Type definition for nodes\r\ntype TreeNodeProps = {\r\n    label: string;\r\n    children?: TreeNodeProps[];\r\n};\r\n\r\n// Tree data\r\nconst treeData: TreeNodeProps = {\r\n    label: \"Root\",\r\n    children: [\r\n        {\r\n            label: \"Child 1\",\r\n            children: [\r\n                { label: \"Subchild 1\" },\r\n                { label: \"Subchild 2\" }\r\n            ]\r\n        },\r\n        {\r\n            label: \"Child 2\",\r\n            children: [{ label: \"Subchild 3\" }]\r\n        }\r\n    ]\r\n};\r\n\r\n// Recursive component for tree nodes\r\nconst TreeNode = ({ node }: { node: TreeNodeProps }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"relative ml-6\">\r\n            {/* Node */}\r\n            <motion.div\r\n                className=\"flex items-center space-x-2 cursor-pointer bg-blue-500 text-white px-3 py-2 rounded-full shadow-md\"\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                whileHover={{ scale: 1.1 }}\r\n                whileTap={{ scale: 0.9 }}\r\n            >\r\n                <span>{isOpen ? \"▼\" : \"▶\"}</span> {/* Expand/collapse arrow */}\r\n                <span>{node.label}</span>\r\n            </motion.div>\r\n\r\n            {/* Connecting Line */}\r\n            {node.children && (\r\n                <motion.div\r\n                    className=\"absolute left-0 top-1/2 w-6 border-l-2 border-gray-400\"\r\n                    initial={{ height: 0 }}\r\n                    animate={{ height: isOpen ? \"20px\" : \"0px\" }}\r\n                    transition={{ duration: 0.3 }}\r\n                />\r\n            )}\r\n\r\n            {/* Children (Collapse & Expand) */}\r\n            <motion.div\r\n                initial={false}\r\n                animate={{ height: isOpen ? \"auto\" : 0, opacity: isOpen ? 1 : 0 }}\r\n                transition={{ duration: 0.3 }}\r\n                className=\"ml-4 border-l-2 border-gray-400 overflow-hidden pl-2\"\r\n            >\r\n                {node.children &&\r\n                    node.children.map((child, index) => (\r\n                        <TreeNode key={index} node={child} />\r\n                    ))}\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,OAAO,CAAsB;EAEtCC,OAAOA,CAAA,EAAG;IAEN,oBACIF,OAAA;MAAAG,QAAA,eACIH,OAAA,CAACI,aAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEd;AACJ;;AAEA;;AAMA;AACA,MAAMC,QAAuB,GAAG;EAC5BC,KAAK,EAAE,MAAM;EACbP,QAAQ,EAAE,CACN;IACIO,KAAK,EAAE,SAAS;IAChBP,QAAQ,EAAE,CACN;MAAEO,KAAK,EAAE;IAAa,CAAC,EACvB;MAAEA,KAAK,EAAE;IAAa,CAAC;EAE/B,CAAC,EACD;IACIA,KAAK,EAAE,SAAS;IAChBP,QAAQ,EAAE,CAAC;MAAEO,KAAK,EAAE;IAAa,CAAC;EACtC,CAAC;AAET,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAA8B,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE3C,oBACIG,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAb,QAAA,gBAE1BH,OAAA,CAACF,MAAM,CAACmB,GAAG;MACPD,SAAS,EAAC,oGAAoG;MAC9GE,OAAO,EAAEA,CAAA,KAAMH,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCK,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAE;MAC3BC,QAAQ,EAAE;QAAED,KAAK,EAAE;MAAI,CAAE;MAAAjB,QAAA,gBAEzBH,OAAA;QAAAG,QAAA,EAAOW,MAAM,GAAG,GAAG,GAAG;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KAAC,eAClCR,OAAA;QAAAG,QAAA,EAAOS,IAAI,CAACF;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,EAGZI,IAAI,CAACT,QAAQ,iBACVH,OAAA,CAACF,MAAM,CAACmB,GAAG;MACPD,SAAS,EAAC,wDAAwD;MAClEM,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MACvBC,OAAO,EAAE;QAAED,MAAM,EAAET,MAAM,GAAG,MAAM,GAAG;MAAM,CAAE;MAC7CW,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI;IAAE;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACJ,eAGDR,OAAA,CAACF,MAAM,CAACmB,GAAG;MACPK,OAAO,EAAE,KAAM;MACfE,OAAO,EAAE;QAAED,MAAM,EAAET,MAAM,GAAG,MAAM,GAAG,CAAC;QAAEa,OAAO,EAAEb,MAAM,GAAG,CAAC,GAAG;MAAE,CAAE;MAClEW,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAC9BV,SAAS,EAAC,sDAAsD;MAAAb,QAAA,EAE/DS,IAAI,CAACT,QAAQ,IACVS,IAAI,CAACT,QAAQ,CAACyB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC3B9B,OAAA,CAACW,QAAQ;QAAaC,IAAI,EAAEiB;MAAM,GAAnBC,KAAK;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAACK,EAAA,CAxCIF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}