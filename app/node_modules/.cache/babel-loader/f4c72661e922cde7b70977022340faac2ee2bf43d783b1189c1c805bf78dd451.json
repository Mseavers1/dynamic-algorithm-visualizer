{"ast":null,"code":"export class FAFadeAllInstruction {\n  constructor() {\n    this.fade_time = 500;\n  }\n  async process(svg) {\n    const promises = [];\n\n    // Fade out all line elements\n    promises.push(new Promise(resolve => {\n      svg.selectAll(\"line[id^='line-']\").transition().duration(this.fade_time).attr(\"stroke\", \"black\").attr(\"stroke-width\", 2).on(\"end\", () => resolve());\n    }));\n\n    // Fade out all path elements\n    promises.push(new Promise(resolve => {\n      svg.selectAll(\"path[id^='line-']\").transition().duration(this.fade_time).attr(\"stroke\", \"black\").attr(\"stroke-width\", 2).on(\"end\", () => resolve());\n    }));\n\n    // Fade out all marker arrowheads\n    promises.push(new Promise(resolve => {\n      svg.selectAll(\"marker[id^='arrow-'] path, defs marker path\").transition().duration(this.fade_time).attr(\"fill\", \"black\").on(\"end\", () => resolve());\n    }));\n    await Promise.all(promises);\n  }\n}","map":{"version":3,"names":["FAFadeAllInstruction","constructor","fade_time","process","svg","promises","push","Promise","resolve","selectAll","transition","duration","attr","on","all"],"sources":["C:/Users/Micha/Documents/GitHub/dynamic-algorithm-visualizer/app/src/components/Instructions/fa_fade_all_instruction.tsx"],"sourcesContent":["import { Instruction } from \"./i_instruction\";\r\nimport { BaseType, Selection } from \"d3\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport class FAFadeAllInstruction implements Instruction {\r\n\r\n    fade_time = 500;\r\n\r\n    async process(svg: Selection<BaseType, unknown, HTMLElement, any>): Promise<void> {\r\n        const promises = [];\r\n\r\n        // Fade out all line elements\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"line[id^='line-']\")\r\n                    .transition()\r\n                    .duration(this.fade_time)\r\n                    .attr(\"stroke\", \"black\")\r\n                    .attr(\"stroke-width\", 2)\r\n                    .on(\"end\", () => resolve());\r\n            })\r\n        );\r\n\r\n        // Fade out all path elements\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"path[id^='line-']\")\r\n                    .transition()\r\n                    .duration(this.fade_time)\r\n                    .attr(\"stroke\", \"black\")\r\n                    .attr(\"stroke-width\", 2)\r\n                    .on(\"end\", () => resolve());\r\n            })\r\n        );\r\n\r\n        // Fade out all marker arrowheads\r\n        promises.push(\r\n            new Promise<void>((resolve) => {\r\n                svg.selectAll(\"marker[id^='arrow-'] path, defs marker path\")\r\n                    .transition()\r\n                    .duration(this.fade_time)\r\n                    .attr(\"fill\", \"black\")\r\n                    .on(\"end\", () => resolve());\r\n            })\r\n        );\r\n\r\n        await Promise.all(promises);\r\n    }\r\n}\r\n"],"mappings":"AAIA,OAAO,MAAMA,oBAAoB,CAAwB;EAAAC,YAAA;IAAA,KAErDC,SAAS,GAAG,GAAG;EAAA;EAEf,MAAMC,OAAOA,CAACC,GAAmD,EAAiB;IAC9E,MAAMC,QAAQ,GAAG,EAAE;;IAEnB;IACAA,QAAQ,CAACC,IAAI,CACT,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAC3BJ,GAAG,CAACK,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CACxBU,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBC,EAAE,CAAC,KAAK,EAAE,MAAML,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC,CACL,CAAC;;IAED;IACAH,QAAQ,CAACC,IAAI,CACT,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAC3BJ,GAAG,CAACK,SAAS,CAAC,mBAAmB,CAAC,CAC7BC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CACxBU,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBC,EAAE,CAAC,KAAK,EAAE,MAAML,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC,CACL,CAAC;;IAED;IACAH,QAAQ,CAACC,IAAI,CACT,IAAIC,OAAO,CAAQC,OAAO,IAAK;MAC3BJ,GAAG,CAACK,SAAS,CAAC,6CAA6C,CAAC,CACvDC,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAACT,SAAS,CAAC,CACxBU,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CACrBC,EAAE,CAAC,KAAK,EAAE,MAAML,OAAO,CAAC,CAAC,CAAC;IACnC,CAAC,CACL,CAAC;IAED,MAAMD,OAAO,CAACO,GAAG,CAACT,QAAQ,CAAC;EAC/B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}